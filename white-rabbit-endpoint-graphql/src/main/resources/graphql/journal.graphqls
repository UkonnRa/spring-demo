type Journal {
  id: ID!
  version: NonNegativeInt!

  name: String!
  description: String!
  tags: [String!]!
  unit: String!
  archived: Boolean!

  admins: [AccessItem!]!
  members: [AccessItem!]!

  isAdmin: Boolean!
  isWriteable: Boolean!

  accounts(
    query: String
    sort: [Order!]!
    first: NonNegativeInt
    after: String
    last: NonNegativeInt
    before: String
    offset: NonNegativeInt
  ): AccountConnection!

  records(
    query: String
    sort: [Order!]!
    first: NonNegativeInt
    after: String
    last: NonNegativeInt
    before: String
    offset: NonNegativeInt
  ): RecordConnection!
}

union AccessItem = User | Group

enum AccessItemType {
  USER
  GROUP
}

type AccessItemValue {
  itemType: AccessItemType!
  id: ID!
}

type JournalValue {
  id: ID!

  name: String!
  description: String!
  tags: [String!]!
  unit: String!
  archived: Boolean!

  admins: [AccessItemValue!]!
  members: [AccessItemValue!]!
}

input AccessItemInput {
  itemType: AccessItemType!
  id: ID!
}

type JournalConnection {
  pageInfo: PageInfo!
  edges: [JournalEdge!]!
}

type JournalEdge {
  node: Journal!
  cursor: String!
}
