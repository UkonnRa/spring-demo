scalar Date
scalar JSON
scalar NonNegativeInt
scalar BigDecimal

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String
  endCursor: String
}

input Order {
  property: String!
  direction: Direction!
}

enum Direction {
  ASC
  DESC
}

type Query {
  user(query: String!): User
  users(
    query: String!
    sort: [Order!]!
    first: NonNegativeInt
    after: String
    last: NonNegativeInt
    before: String
    offset: NonNegativeInt
  ): UserConnection!

  group(query: String!): Group
  groups(
    query: String!
    sort: [Order!]!
    first: NonNegativeInt
    after: String
    last: NonNegativeInt
    before: String
    offset: NonNegativeInt
  ): GroupConnection!

  journal(query: String!): Journal
  journals(
    query: String!
    sort: [Order!]!
    first: NonNegativeInt
    after: String
    last: NonNegativeInt
    before: String
    offset: NonNegativeInt
  ): JournalConnection!

  account(query: String!): Journal
  accounts(
    query: String!
    sort: [Order!]!
    first: NonNegativeInt
    after: String
    last: NonNegativeInt
    before: String
    offset: NonNegativeInt
  ): AccountConnection!

  record(query: String!): Record
  records(
    query: String!
    sort: [Order!]!
    first: NonNegativeInt
    after: String
    last: NonNegativeInt
    before: String
    offset: NonNegativeInt
  ): RecordConnection!
}

type Mutation {
  createUser(targetId: ID, name: String!, role: Role, authIds: [AuthIdInput!]): User
  updateUser(targetId: ID!, name: String, role: Role, authIds: [AuthIdInput!]): User
  deleteUser(targetId: ID!): User
  handleUserCommands(commands: [JSON!]!): [UserValue]!

  createGroup(targetId: ID, name: String!, description: String!, admins: [ID!]!, members: [ID!]!): Group
  updateGroup(targetId: ID!, name: String, description: String, admins: [ID!], members: [ID!]): Group
  deleteGroup(targetId: ID!): Group
  handleGroupCommands(commands: [JSON!]!): [GroupValue]!

  createJournal(targetId: ID, name: String!, description: String!, tags: [String!]!, unit: String!, admins: [AccessItemInput!]!, members: [AccessItemInput!]!): Journal
  updateJournal(targetId: ID!, name: String, description: String, tags: [String!], unit: String, archived: Boolean, admins: [AccessItemInput!], members: [AccessItemInput!]): Journal
  deleteJournal(targetId: ID!): Journal
  handleJournalCommands(commands: [JSON!]!): [JournalValue]!

  createAccount(targetId: ID, journal: ID!, name: String!, description: String!, accountType: AccountType!, strategy: AccountStrategy!, unit: String!): Account
  updateAccount(targetId: ID!, name: String, description: String, accountType: AccountType, strategy: AccountStrategy, unit: String, archived: Boolean): Account
  deleteAccount(targetId: ID!): Account
  handleAccountCommands(commands: [JSON!]!): [AccountValue]!

  createRecord(targetId: ID, journal: ID!, name: String!, description: String!, recordType: RecordType!, date: Date!, tags: [String!]!, items: [RecordItemInput!]!): Record
  updateRecord(targetId: ID!, name: String, description: String, recordType: RecordType, date: Date, tags: [String!], items: [RecordItemInput!]): Record
  deleteRecord(targetId: ID!): Record
  handleRecordCommands(commands: [JSON!]!): [RecordValue]!
}
